{"version":3,"sources":["App.tsx","components/Goods.tsx","index.tsx"],"names":["SortType","Goods","props","visibleGoods","map","good","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isResetable","className","type","classNames","onClick","current","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,4DCfQC,EAAyB,SAACC,GACrC,IAAQC,EAAiBD,EAAjBC,aAER,OACE,6BACGA,EAAaC,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SDJnBC,G,YAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SAGGN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAMO,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASR,EAASW,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAOMV,EApCR,SACEW,EACAF,EACAH,GAEA,IAAMN,EAAY,YAAOW,GAmBzB,OAjBIF,IAAaZ,EAASW,MACxBR,EAAaY,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAKZ,EAASkB,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKjB,EAASoB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAKXZ,GACFN,EAAamB,UAGRnB,EAYcoB,CACnBjB,EACAM,EACAH,GAGIe,EAAcf,GAAcG,IAAaZ,EAASW,KAExD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYf,IAAaZ,EAASkB,WAGtCU,QAAS,kBAAMf,EAAYb,EAASkB,WATtC,iCAcA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYf,IAAaZ,EAASoB,SAGtCQ,QAAS,kBAAMf,EAAYb,EAASoB,SATtC,4BAcA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAalB,IAGjBmB,QAAS,kBAAMlB,GAAc,SAAAmB,GAAO,OAAKA,MAT3C,qBAcCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,kBA7DjBf,EAAYb,EAASW,WACrBD,GAAc,IAyDR,sBAUHP,EAAakB,OAAS,GAAK,cAAC,EAAD,CAAOlB,aAAcA,QE1HvD2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.94a7841b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport classNames from 'classnames';\nimport { Goods } from './components/Goods';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((a, b) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return a.localeCompare(b);\n        case SortType.LENGTH:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  const isResetable = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={() => setIsReversed(current => !current)}\n        >\n          Reverse\n        </button>\n\n        {isResetable && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => reset()}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      {visibleGoods.length > 0 && <Goods visibleGoods={visibleGoods} />}\n    </div>\n  );\n};\n","type Props = {\n  visibleGoods: string[],\n};\n\nexport const Goods: React.FC<Props> = (props) => {\n  const { visibleGoods } = props;\n\n  return (\n    <ul>\n      {visibleGoods.map(good => (\n        <li data-cy=\"Good\" key={good}>{good}</li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}